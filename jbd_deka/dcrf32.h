#ifndef DCRF32_H_
#define DCRF32_H_

#ifdef WIN32
	#include <windows.h>
#else
	#define __stdcall
	#define HANDLE long
#endif

#define USER_API __stdcall

#ifdef __cplusplus
extern "C" {
#endif

	HANDLE USER_API dc_init(short port, long baud);
	short USER_API dc_exit(HANDLE icdev);
	short USER_API dc_init_config(int _DevType = 0, const char *_Para = 0);
	short USER_API dc_config(HANDLE icdev, unsigned char _Mode, unsigned char _Baud);
	short USER_API dc_request(HANDLE icdev, unsigned char _Mode, unsigned short *TagType);
	short USER_API dc_anticoll(HANDLE icdev, unsigned char _Bcnt, unsigned long *_Snr);
	short USER_API dc_select(HANDLE icdev, unsigned long _Snr, unsigned char *_Size);
	short USER_API dc_authentication(HANDLE icdev, unsigned char _Mode, unsigned char _SecNr);
	short USER_API dc_halt(HANDLE icdev);
	short USER_API dc_read(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_read_hex(HANDLE icdev, unsigned char _Adr, char *_Data);
	short USER_API dc_write(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_write_hex(HANDLE icdev, unsigned char _Adr, char *_Data);
	short USER_API dc_write_TS(HANDLE icdev);
	short USER_API dc_load_key(HANDLE icdev, unsigned char _Mode, unsigned char _SecNr, unsigned char *_NKey);
	short USER_API dc_load_key_hex(HANDLE icdev, unsigned char _Mode, unsigned char _SecNr, char *_NKey);
	short USER_API dc_card(HANDLE icdev, unsigned char _Mode, unsigned long *_Snr);
	short USER_API dc_card_hex(HANDLE icdev, unsigned char _Mode, unsigned char *snrstr);
	short USER_API dc_changeb3(HANDLE icdev, unsigned char _SecNr, unsigned char *_KeyA, unsigned char _B0, unsigned char _B1, unsigned char _B2, unsigned char _B3, unsigned char _Bk, unsigned char *_KeyB);
	short USER_API dc_changeb3_hex(HANDLE icdev, unsigned char _SecNr, const char *_KeyA, unsigned char _B0, unsigned char _B1, unsigned char _B2, unsigned char _B3, unsigned char _Bk, const char *_KeyB);
	short USER_API dc_restore(HANDLE icdev, unsigned char _Adr);
	short USER_API dc_transfer(HANDLE icdev, unsigned char _Adr);
	short USER_API dc_increment(HANDLE icdev, unsigned char _Adr, unsigned long _Value);
	short USER_API dc_decrement(HANDLE icdev, unsigned char _Adr, unsigned long _Value);
	short USER_API dc_initval(HANDLE icdev, unsigned char _Adr, unsigned long _Value);
	short USER_API dc_readval(HANDLE icdev, unsigned char _Adr, unsigned long *_Value);
	short USER_API dc_initval_ml(HANDLE icdev, unsigned short _Value);
	short USER_API dc_readval_ml(HANDLE icdev, unsigned short *_Value);
	short USER_API dc_decrement_ml(HANDLE icdev, unsigned short _Value);
	short USER_API dc_authentication_2(HANDLE icdev, unsigned char _Mode, unsigned char KeyNr, unsigned char Adr);
	short USER_API dc_anticoll2(HANDLE icdev, unsigned char _Bcnt, unsigned long *_Snr);
	short USER_API dc_select2(HANDLE icdev, unsigned long _Snr, unsigned char *_Size);
	short USER_API dc_HL_write(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long *_Snr, unsigned char *_Data);
	short USER_API dc_HL_writehex(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long *_Snr, unsigned char *_Data);
	short USER_API dc_HL_read(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long _Snr, unsigned char *_Data, unsigned long *_NSnr);
	short USER_API dc_HL_readhex(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long _Snr, unsigned char *_Data, unsigned long *_NSnr);
	short USER_API dc_HL_authentication(HANDLE icdev, unsigned char reqmode, unsigned long snr, unsigned char authmode, unsigned char secnr);
	short USER_API dc_check_write(HANDLE icdev, unsigned long Snr, unsigned char authmode, unsigned char Adr, unsigned char *_data);
	short USER_API dc_check_writehex(HANDLE icdev, unsigned long Snr, unsigned char authmode, unsigned char Adr, unsigned char *_data);
	short USER_API dc_getver(HANDLE icdev, unsigned char *sver);
	short USER_API dc_update(HANDLE icdev);
	short USER_API dc_clr_control_bit(HANDLE icdev, unsigned char _b);
	short USER_API dc_set_control_bit(HANDLE icdev, unsigned char _b);
	short USER_API dc_reset(HANDLE icdev, unsigned short _Msec);
	short USER_API dc_beep(HANDLE icdev, unsigned short _Msec);
	short USER_API dc_disp_str(HANDLE icdev, char *dispstr);
	short USER_API dc_srd_eeprom(HANDLE icdev, short offset, short lenth, unsigned char *rec_buffer);
	short USER_API dc_swr_eeprom(HANDLE icdev, short offset, short lenth, unsigned char *send_buffer);
	short USER_API dc_write_snr(HANDLE icdev, unsigned char *snr);
//	short USER_API dc_read_snr(HANDLE icdev, unsigned char *snr); //dc_readdevsnr
	short USER_API swr_alleeprom(HANDLE icdev, short offset, short lenth, unsigned char *snd_buffer);
	short USER_API srd_alleeprom(HANDLE icdev, short offset, short lenth, unsigned char *receive_buffer);
	short USER_API dc_srd_eepromhex(HANDLE icdev, short offset, short lenth, unsigned char *rec_buffer);
	short USER_API dc_swr_eepromhex(HANDLE icdev, short offset, short lenth, unsigned char *send_buffer);
	short USER_API dc_gettime(HANDLE icdev, unsigned char *time);
	short USER_API dc_gettimehex(HANDLE icdev, char *time);
	short USER_API dc_settime(HANDLE icdev, unsigned char *time);
	short USER_API dc_settimehex(HANDLE icdev, char *time);
	short USER_API dc_setbright(HANDLE icdev, unsigned char bright);
	short USER_API dc_ctl_mode(HANDLE icdev, unsigned char mode);
	short USER_API dc_disp_mode(HANDLE icdev, unsigned char mode);
	short USER_API dcdeshex(unsigned char *key, unsigned char *sour, unsigned char *dest, short m);
	short USER_API dcdes(unsigned char *key, unsigned char *sour, unsigned char *dest, short m);
	short USER_API dc_light(HANDLE icdev, unsigned short _OnOff);
	short USER_API dc_high_disp(HANDLE icdev, unsigned char offset, unsigned char displen, unsigned char *dispstr);
	short USER_API dc_setcpu(HANDLE icdev, unsigned char _Byte);
	short USER_API dc_cpureset(HANDLE icdev, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapdusource(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapdu(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpureset_hex(HANDLE icdev, unsigned char *rlen, char *databuffer);
	short USER_API dc_cpuapdusource_hex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer);
	short USER_API dc_cpuapdu_hex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer);
	short USER_API dc_cpuapdurespon(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapdurespon_hex(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpudown(HANDLE icdev);
	short USER_API dc_set_addr(unsigned char saddr);
	HANDLE USER_API dc_init_485(short port, long baud);
	short USER_API dc_changebaud_485(HANDLE icdev, long baud);
	short USER_API dc_change_addr(HANDLE icdev, unsigned char saddr);
	short USER_API dc_pro_reset(HANDLE icdev, unsigned char *rlen, unsigned char *receive_data);
	short USER_API dc_pro_command(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_pro_resethex(HANDLE icdev, unsigned char *rlen, char *receive_data);
	short USER_API dc_pro_resetInt(HANDLE icdev, unsigned char *rlen, unsigned char *receive_data);
	short USER_API dc_pro_resetInt_hex(HANDLE icdev, unsigned char *rlen, char *receive_data);
	short USER_API dc_pro_commandhex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer, unsigned char timeout);
	short USER_API dc_pro_commandsource(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_pro_commandsourcehex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer, unsigned char timeout);
	short USER_API dc_pro_commandsource_int(HANDLE icdev, unsigned int slen, unsigned char *sendbuffer, unsigned int *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_pro_halt(HANDLE icdev);
	short USER_API dc_request_shc1102(HANDLE icdev, unsigned char _Mode, unsigned short *TagType);
	short USER_API dc_auth_shc1102(HANDLE icdev, unsigned char *_Data);
	short USER_API dc_read_shc1102(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_write_shc1102(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_halt_shc1102(HANDLE icdev);
	short USER_API hex_a(unsigned char *hex, unsigned char *a, short length);
	short USER_API a_hex(unsigned char *a, unsigned char *hex, short len);
	short USER_API dc_config_card(HANDLE icdev, unsigned char cardtype);
	short USER_API dc_request_b(HANDLE icdev, unsigned char _Mode, unsigned char AFI, unsigned char N, unsigned char *ATQB);
	short USER_API dc_slotmarker(HANDLE icdev, unsigned char N, unsigned char *ATQB);
	short USER_API dc_attrib(HANDLE icdev, unsigned char *PUPI, unsigned char CID);
	short USER_API dc_open_door(HANDLE icdev, unsigned char cflag);
	short USER_API dc_open_timedoor(HANDLE icdev, unsigned short utime);
	short USER_API dc_read_random(HANDLE icdev, unsigned char *data);
	short USER_API dc_write_random(HANDLE icdev, short len, unsigned char *data);
	short USER_API dc_read_random_hex(HANDLE icdev, unsigned char *data);
	short USER_API dc_write_random_hex(HANDLE icdev, short len, unsigned char *data);
	short USER_API dc_erase_random(HANDLE icdev, short len);
	short USER_API dc_mfdes_auth(HANDLE icdev, unsigned char keyno, unsigned char keylen, unsigned char *authkey, unsigned char *randAdata, unsigned char *randBdata);
	short USER_API dc_authentication_pass(HANDLE icdev, unsigned char _Mode, unsigned char _Addr, unsigned char *passbuff);
	short USER_API dc_disp_neg(HANDLE icdev, char *dispstr);
	short USER_API dc_pro_commandlink(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout, unsigned char FG);
	short USER_API dc_pro_commandlink_hex(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout, unsigned char FG);
	short USER_API dc_card_double(HANDLE icdev, unsigned char _Mode, unsigned char *_Snr);
	short USER_API dc_card_double_hex(HANDLE icdev, unsigned char _Mode, unsigned char *_Snr);
	short USER_API dc_read_idcard(HANDLE icdev, unsigned char times, unsigned char *_Data);
	short USER_API dc_read_idcard_hex(HANDLE icdev, unsigned char times, unsigned char *_Data);
	short USER_API dc_authentication_pass_hex(HANDLE icdev, unsigned char _Mode, unsigned char _Addr, unsigned char *passbuff);
	short USER_API dc_setcpupara(HANDLE icdev, unsigned char cputype, unsigned char cpupro, unsigned char cpuetu);
	short USER_API dc_command(HANDLE icdev, unsigned char cmd, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_command_hex(HANDLE icdev, unsigned char cmd, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer);
	short USER_API dc_creat_mac(unsigned char KeyLen, unsigned char *Key, unsigned short DataLen, unsigned char *Data, unsigned char *InitData, unsigned char AutoFixFlag, unsigned char FixChar, unsigned char *MacData);
	short USER_API dc_creat_mac_hex(unsigned char KeyLen, unsigned char *Key, unsigned short DataLen, unsigned char *Data, unsigned char *InitData, unsigned char AutoFixFlag, unsigned char FixChar, unsigned char *MacData);
	short USER_API dc_encrypt(char *key, char *ptrSource, unsigned short msgLen, char *ptrDest);
	short USER_API dc_decrypt(char *key, char *ptrSource, unsigned short msgLen, char *ptrDest);
	short USER_API dc_encrypt_hex(char *key, char *ptrSource, unsigned short msgLen, char *ptrDest);
	short USER_API dc_decrypt_hex(char *key, char *ptrSource, unsigned short msgLen, char *ptrDest);
	short USER_API dc_HL_write_hex(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long *_Snr, unsigned char *_Data);
	short USER_API dc_HL_read_hex(HANDLE icdev, unsigned char _Mode, unsigned char _Adr, unsigned long _Snr, unsigned char *_Data, unsigned long *_NSnr);
	short USER_API dc_check_write_hex(HANDLE icdev, unsigned long Snr, unsigned char authmode, unsigned char Adr, unsigned char *_data);
	short USER_API dc_srd_eeprom_hex(HANDLE icdev, short offset, short lenth, unsigned char *rec_buffer);
	short USER_API dc_swr_eeprom_hex(HANDLE icdev, short offset, short lenth, unsigned char *send_buffer);
	short USER_API dc_gettime_hex(HANDLE icdev, char *time);
	short USER_API dc_settime_hex(HANDLE icdev, char *time);
	short USER_API dc_des_hex(unsigned char *key, unsigned char *sour, unsigned char *dest, short m);
	short USER_API dc_des(unsigned char *key, unsigned char *sour, unsigned char *dest, short m);
	short USER_API dc_pro_reset_hex(HANDLE icdev, unsigned char *rlen, char *receive_data);
	short USER_API dc_pro_command_hex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer, unsigned char timeout);
	short USER_API dc_pro_commandsource_hex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer, unsigned char timeout);
	short USER_API dc_switch_unix(HANDLE icdev, long baud);
	short USER_API dc_authentication_passaddr(HANDLE icdev, unsigned char _Mode, unsigned char _Addr, unsigned char *passbuff);
	short USER_API dc_authentication_passaddr_hex(HANDLE icdev, unsigned char _Mode, unsigned char _Addr, unsigned char *passbuff);
	short USER_API dc_card_fm11rf005(HANDLE icdev, unsigned char _Mode, unsigned long *_Snr);
	short USER_API dc_setusbtimeout(unsigned char ntimes);
	short USER_API dc_mfdes_baud(HANDLE icdev, unsigned char _Mode, unsigned char para);
	short USER_API dc_tripledes(unsigned char *key, unsigned char *src, unsigned char *dest, short m);
	short USER_API dc_tripledes_hex(unsigned char *key, unsigned char *src, unsigned char *dest, short m);
	short USER_API dc_mfdes_auth_hex(HANDLE icdev, unsigned char keyno, unsigned char keylen, unsigned char *authkey, unsigned char *randAdata, unsigned char *randBdata);
	short USER_API dc_pro_sendcommandsource(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char timeout);
	short USER_API dc_pro_receivecommandsource(HANDLE icdev, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_inventory(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char masklen, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_inventory_hex(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char masklen, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_stay_quiet(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_stay_quiet_hex(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_select_uid(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_select_uid_hex(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_reset_to_ready(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_reset_to_ready_hex(HANDLE icdev, unsigned char flags, unsigned char *UID);
	short USER_API dc_readblock(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_readblock_hex(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_writeblock(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char wlen, unsigned char *rbuffer);
	short USER_API dc_writeblock_hex(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char wlen, unsigned char *rbuffer);
	short USER_API dc_lock_block(HANDLE icdev, unsigned char flags, unsigned char block, unsigned char *UID);
	short USER_API dc_lock_block_hex(HANDLE icdev, unsigned char flags, unsigned char block, unsigned char *UID);
	short USER_API dc_write_afi(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char *UID);
	short USER_API dc_write_afi_hex(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char *UID);
	short USER_API dc_lock_afi(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char *UID);
	short USER_API dc_lock_afi_hex(HANDLE icdev, unsigned char flags, unsigned char AFI, unsigned char *UID);
	short USER_API dc_write_dsfid(HANDLE icdev, unsigned char flags, unsigned char DSFID, unsigned char *UID);
	short USER_API dc_write_dsfid_hex(HANDLE icdev, unsigned char flags, unsigned char DSFID, unsigned char *UID);
	short USER_API dc_lock_dsfid(HANDLE icdev, unsigned char flags, unsigned char DSFID, unsigned char *UID);
	short USER_API dc_lock_dsfid_hex(HANDLE icdev, unsigned char flags, unsigned char DSFID, unsigned char *UID);
	short USER_API dc_get_systeminfo(HANDLE icdev, unsigned char flags, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_get_systeminfo_hex(HANDLE icdev, unsigned char flags, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_get_securityinfo(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_get_securityinfo_hex(HANDLE icdev, unsigned char flags, unsigned char startblock, unsigned char blocknum, unsigned char *UID, unsigned char *rlen, unsigned char *rbuffer);
	short USER_API dc_getsnr_fm11rf005(HANDLE icdev, unsigned long *_Snr);
	short USER_API dc_getsnr_fm11rf005_hex(HANDLE icdev, unsigned char *snrstr);
	short USER_API dc_write_fm11rf005(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_read_fm11rf005(HANDLE icdev, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_read_fm11rf005_hex(HANDLE icdev, unsigned char _Adr, char *_Data);
	short USER_API dc_write_fm11rf005_hex(HANDLE icdev, unsigned char _Adr, char *_Data);
	short USER_API DCDEV_CommandMcu(HANDLE icdev, unsigned char ctimeout, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API DCDEV_CommandMcu_Hex(HANDLE icdev, unsigned char ctimeout, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_displcd(HANDLE icdev, unsigned char flag);
	short USER_API dc_GetInputPass(HANDLE icdev, unsigned char ctime, unsigned char *rlen, unsigned char *cpass);
	short USER_API dc_readmagcard(HANDLE icdev, unsigned char ctime, unsigned char *pTrack2Data, unsigned long *pTrack2Len, unsigned char *pTrack3Data, unsigned long *pTrack3Len);
	short USER_API dc_testdevicecomm(HANDLE icdev);
	short USER_API dc_dispmainmenu(HANDLE icdev);
	short USER_API dc_setdevicetime(HANDLE icdev, unsigned char year, unsigned char month, unsigned char date, unsigned char hour, unsigned char minute, unsigned char second);
	short USER_API dc_getdevicetime(HANDLE icdev, unsigned char *year, unsigned char *month, unsigned char *date, unsigned char *hour, unsigned char *minute, unsigned char *second);
	short USER_API dc_dispinfo(HANDLE icdev, unsigned char line, unsigned char offset, char *data);
	short USER_API dc_dispmaininfo(HANDLE icdev, unsigned char offset, char *data);
	short USER_API dc_posbeep(HANDLE icdev, unsigned char beeptime);
	short USER_API dc_ctlbacklight(HANDLE icdev, unsigned char cOpenFlag);
	short USER_API dc_ctlled(HANDLE icdev, unsigned char cLed, unsigned char cOpenFlag);
	short USER_API dc_lcdclrscrn(HANDLE icdev, unsigned char cLine);
	short USER_API dc_PassIn(HANDLE icdev, unsigned char ctime);
	short USER_API dc_PassGet(HANDLE icdev, unsigned char *rlen, unsigned char *cpass);
	short USER_API dc_PassCancel(HANDLE icdev);
	short USER_API dc_getinputkey(HANDLE icdev, unsigned char disptype, unsigned char line, unsigned char ctime, unsigned char *rlen, unsigned char *ckeydata);
	short USER_API dc_displcd_ext(HANDLE icdev, unsigned char flag, unsigned char row, unsigned char offset);
	short USER_API dc_readmagcardall(HANDLE icdev, unsigned char ctime, unsigned char *pTrack1Data, unsigned long *pTrack1Len, unsigned char *pTrack2Data, unsigned long *pTrack2Len, unsigned char *pTrack3Data, unsigned long *pTrack3Len);
	short USER_API dc_readdevsnr(HANDLE icdev, unsigned char *snr);
	short USER_API dc_readreadersnr(HANDLE icdev, unsigned char *snr);
	short USER_API dc_resetdevice(HANDLE icdev);
	short USER_API dc_read_4442(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_read_4442_hex(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_write_4442(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_write_4442_hex(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_verifypin_4442(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_verifypin_4442_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpin_4442(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpin_4442_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpincount_4442(HANDLE icdev);
	short USER_API dc_changepin_4442(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_changepin_4442_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readwrotect_4442(HANDLE icdev, short offset, short leng, unsigned char *buffer);
	short USER_API dc_readwrotect_4442_hex(HANDLE icdev, short offset, short leng, unsigned char *buffer);
	short USER_API dc_writeprotect_4442(HANDLE icdev, short offset, short leng, unsigned char *buffer);
	short USER_API dc_writeprotect_4442_hex(HANDLE icdev, short offset, short leng, unsigned char *buffer);
	short USER_API dc_write_24c(HANDLE icdev, short offset, short lenth, unsigned char *snd_buffer);
	short USER_API dc_write_24c_hex(HANDLE icdev, short offset, short lenth, unsigned char *snd_buffer);
	short USER_API dc_write_24c64(HANDLE icdev, short offset, short lenth, unsigned char *snd_buffer);
	short USER_API dc_write_24c64_hex(HANDLE icdev, short offset, short lenth, unsigned char *snd_buffer);
	short USER_API dc_read_24c(HANDLE icdev, short offset, short lenth, unsigned char *receive_buffer);
	short USER_API dc_read_24c_hex(HANDLE icdev, short offset, short lenth, unsigned char *receive_buffer);
	short USER_API dc_read_24c64(HANDLE icdev, short offset, short lenth, unsigned char *receive_buffer);
	short USER_API dc_read_24c64_hex(HANDLE icdev, short offset, short lenth, unsigned char *receive_buffer);
	short USER_API dc_read_4428(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_read_4428_hex(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_write_4428(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_write_4428_hex(HANDLE icdev, short offset, short lenth, unsigned char *buffer);
	short USER_API dc_verifypin_4428(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_verifypin_4428_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpin_4428(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpin_4428_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_readpincount_4428(HANDLE icdev);
	short USER_API dc_changepin_4428(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_changepin_4428_hex(HANDLE icdev, unsigned char *passwd);
	short USER_API dc_Check_4442(HANDLE icdev);
	short USER_API dc_Check_4428(HANDLE icdev);
	short USER_API dc_Check_24C01(HANDLE icdev);
	short USER_API dc_Check_24C02(HANDLE icdev);
	short USER_API dc_Check_24C04(HANDLE icdev);
	short USER_API dc_Check_24C08(HANDLE icdev);
	short USER_API dc_Check_24C16(HANDLE icdev);
	short USER_API dc_Check_24C64(HANDLE icdev);
	short USER_API dc_Check_CPU(HANDLE icdev);
	short USER_API dc_CheckCard(HANDLE icdev);
	short USER_API dc_getrcinfo(HANDLE icdev, unsigned char *info);
	short USER_API dc_getrcinfo_hex(HANDLE icdev, unsigned char *info);
	short USER_API dc_getlongver(HANDLE icdev, unsigned char *sver);
	short USER_API dc_cardstr(HANDLE icdev, unsigned char _Mode, char *Strsnr);
	short USER_API dc_cardAB(HANDLE icdev, unsigned char *rlen, unsigned char *rbuf, unsigned char *type);
	short USER_API dc_card_b(HANDLE icdev, unsigned char *rbuf);
	short USER_API dc_card_b_hex(HANDLE icdev, char *rbuf);
	short USER_API dc_dispinfo_T8(HANDLE icdev, unsigned char line, unsigned char offset, char *data);
	short USER_API dc_dispinfo_pro_T8(HANDLE icdev, unsigned char offset, char *data);
	short USER_API dc_clearlcd_T8(HANDLE icdev, unsigned char line);
	short USER_API dc_led_T8(HANDLE icdev, unsigned char cled, unsigned char cflag);
	short USER_API dc_dispmap_T8(HANDLE icdev, unsigned char *mapdata);
	short USER_API dc_displow_T8(HANDLE icdev, unsigned char rs, unsigned char cdata);
	short USER_API dc_rw_rfreg(HANDLE icdev, unsigned char flag, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_rw_rfreg_hex(HANDLE icdev, unsigned char flag, unsigned char _Adr, unsigned char *_Data);
	short USER_API dc_mulrequest_b(HANDLE icdev, unsigned char _Mode, unsigned char AFI, unsigned char *cardnum, unsigned char *mulATQB);
	short USER_API dc_hltb(HANDLE icdev, unsigned char *PUPI);
	short USER_API dc_set_poweroff(HANDLE icdev, unsigned int MsTimes, unsigned char TimerClock, unsigned char TimerReload);
	short USER_API dc_pro_commandsourceCRC(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout, unsigned char CRCSTU);
	short USER_API dc_pro_commandsourceCRChex(HANDLE icdev, unsigned char slen, char *sendbuffer, unsigned char *rlen, char *databuffer, unsigned char timeout, unsigned char CRCSTU);
	short USER_API dc_MFPL0_writeperso(HANDLE icdev, unsigned int BNr, unsigned char *dataperso);
	short USER_API dc_MFPL0_writeperso_hex(HANDLE icdev, unsigned int BNr, unsigned char *dataperso);
	short USER_API dc_MFPL0_commitperso(HANDLE icdev);
	short USER_API dc_MFPL1_authl1key(HANDLE icdev, unsigned char *authkey);
	short USER_API dc_MFPL1_authl1key_hex(HANDLE icdev, unsigned char *authkey);
	short USER_API dc_MFPL1_switchtol2(HANDLE icdev, unsigned char *authkey);
	short USER_API dc_MFPL1_switchtol3(HANDLE icdev, unsigned char *authkey);
	short USER_API dc_MFPL2_switchtol3(HANDLE icdev, unsigned char *authkey);
	short USER_API dc_MFPL3_authl3key(HANDLE icdev, unsigned int keyBNr, unsigned char *authkey);
	short USER_API dc_MFPL3_authl3key_hex(HANDLE icdev, unsigned int keyBNr, unsigned char *authkey);
	short USER_API dc_MFPL3_authl3sectorkey(HANDLE icdev, unsigned char mode, unsigned int sectorBNr, unsigned char *authkey);
	short USER_API dc_MFPL3_authl3sectorkey_hex(HANDLE icdev, unsigned char mode, unsigned int sectorBNr, unsigned char *authkey);
	short USER_API dc_MFPL3_readinplain(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *readdata);
	short USER_API dc_MFPL3_readinplain_hex(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *readdata);
	short USER_API dc_MFPL3_readencrypted(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *readdata, unsigned char flag);
	short USER_API dc_MFPL3_readencrypted_hex(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *readdata, unsigned char flag);
	short USER_API dc_MFPL3_writeinplain(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *writedata);
	short USER_API dc_MFPL3_writeinplain_hex(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *writedata);
	short USER_API dc_MFPL3_writeencrypted(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *writedata, unsigned char flag);
	short USER_API dc_MFPL3_writeencrypted_hex(HANDLE icdev, unsigned int BNr, unsigned char Numblock, unsigned char *writedata, unsigned char flag);
	short USER_API dc_auth_ulc(HANDLE icdev, unsigned char *key);
	short USER_API dc_auth_ulc_hex(HANDLE icdev, unsigned char *key);
	short USER_API dc_changekey_ulc(HANDLE icdev, unsigned char *newkey);
	short USER_API dc_changekey_ulc_hex(HANDLE icdev, unsigned char *newkey);
	short USER_API dc_getcpupara(HANDLE icdev, unsigned char cputype, unsigned char *cpupro, unsigned char *cpuetu);
	short USER_API dc_cpuapdusourceEXT(HANDLE icdev, short slen, unsigned char *sendbuffer, short *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapdusourceEXT_hex(HANDLE icdev, short slen, char *sendbuffer, short *rlen, char *databuffer);
	short USER_API dc_cpuapduEXT(HANDLE icdev, short slen, unsigned char *sendbuffer, short *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapduEXT_hex(HANDLE icdev, short slen, char *sendbuffer, short *rlen, char *databuffer);
	short USER_API dc_cpuapduInt(HANDLE icdev, unsigned int slen, unsigned char *sendbuffer, unsigned int *rlen, unsigned char *databuffer);
	short USER_API dc_cpuapduInt_hex(HANDLE icdev, unsigned int slen, char *sendbuffer, unsigned int *rlen, char *databuffer);
	short USER_API dc_pro_commandlinkEXT(HANDLE icdev, unsigned int slen, unsigned char *sendbuffer, unsigned int *rlen, unsigned char *databuffer, unsigned char timeout, unsigned char FG);
	short USER_API dc_pro_commandlinkEXT_hex(HANDLE icdev, unsigned int slen, unsigned char *sendbuffer, unsigned int *rlen, unsigned char *databuffer, unsigned char timeout, unsigned char FG);
	short USER_API dc_pro_commandlinkInt(HANDLE icdev, unsigned int slen, unsigned char *sendbuffer, unsigned int *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_pro_commandlinkInt_hex(HANDLE icdev, unsigned int slen, char *sendbuffer, unsigned int *rlen, char *databuffer, unsigned char timeout);
	short USER_API dc_exchangeblock(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_exchangeblock_hex(HANDLE icdev, unsigned char slen, unsigned char *sendbuffer, unsigned char *rlen, unsigned char *databuffer, unsigned char timeout);
	short USER_API dc_write1024(HANDLE icdev, unsigned long offset, unsigned long lenth, unsigned char *writebuffer);
	short USER_API dc_write1024_hex(HANDLE icdev, unsigned long offset, unsigned long lenth, unsigned char *writebuffer);
	short USER_API dc_read1024(HANDLE icdev, unsigned long offset, unsigned long lenth, unsigned char *databuffer);
	short USER_API dc_read1024_hex(HANDLE icdev, unsigned long offset, unsigned long lenth, unsigned char *databuffer);
	short USER_API dc_switch_linux(HANDLE icdev);
	short USER_API dc_cpuhotreset(HANDLE icdev, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_cpuhotreset_hex(HANDLE icdev, unsigned char *rlen, char *databuffer);
	short USER_API dc_card_status(HANDLE icdev,unsigned char cardtype);
	short USER_API dc_card_n(HANDLE icdev, unsigned char _Mode, unsigned long *SnrLen, unsigned char *_Snr);
	short USER_API dc_card_n_hex(HANDLE icdev, unsigned char _Mode, unsigned long *SnrLen, unsigned char *_Snr);
	short USER_API dc_card_n_number(HANDLE icdev, unsigned char _Mode, char *_Snr);
	short USER_API dc_pass_key_value(HANDLE icdev, unsigned char timeout, char *value);
	short USER_API dc_play_voice(HANDLE icdev, unsigned char mode);

	short USER_API dc_setprint(HANDLE icdev, unsigned char FontSize, unsigned char Alignment, unsigned char LeftMargin, unsigned char RightMargin, unsigned char RowPitch, unsigned char PrintOutRate);
	short USER_API dc_checkprint(HANDLE icdev, unsigned char *FontSize, unsigned char *Alignment, unsigned char *LeftMargin, unsigned char *RightMargin, unsigned char *RowPitch, unsigned char *PrintOutRate);
	short USER_API dc_printcharacter(HANDLE icdev, unsigned short len, unsigned char *character);
	short USER_API dc_printOnedimensional(HANDLE icdev, unsigned char hight, unsigned char displayflag, unsigned char FontSize, unsigned short len, unsigned char *Onedimensional);
	short USER_API dc_printPicture(HANDLE icdev, unsigned char length, unsigned char height, unsigned char Alignment, unsigned char LeftMargin, unsigned char RightMargin, unsigned short len, unsigned char *Picture);
	short USER_API dc_printenter(HANDLE icdev, unsigned char RowPitch);
	short USER_API dc_printstatus(HANDLE icdev, unsigned char *paperstatus, unsigned char *tempturestatus, unsigned char *zkstatus);
	
	short USER_API dc_set2dot4Gbaund(HANDLE icdev, unsigned char baund);
	short USER_API dc_check2dot4Gbaund(HANDLE icdev, unsigned char *baund);
	short USER_API dc_2dot4_reset(HANDLE icdev, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_2dot4_resethex(HANDLE icdev, unsigned char *rlen, unsigned char *databuffer);
	short USER_API dc_2dot4_command(HANDLE icdev, unsigned int slen, unsigned char *senddata, unsigned int *rlen, unsigned char *recvbuffer, unsigned char timeout);
	short USER_API dc_2dot4_command_hex(HANDLE icdev, unsigned int slen, unsigned char *senddata, unsigned int *rlen, unsigned char *recvbuffer, unsigned char timeout);

	short USER_API dc_check_1604(HANDLE icdev);
	short USER_API dc_down_1604(HANDLE icdev);
	short USER_API dc_read_1604(HANDLE icdev, unsigned int offset, unsigned int lenth, unsigned char *readdata);
	short USER_API dc_read_1604_hex(HANDLE icdev, unsigned int offset, unsigned int lenth, unsigned char *readdata);
	short USER_API dc_write_1604(HANDLE icdev, unsigned int offset, unsigned int lenth, unsigned char *writedata);
	short USER_API dc_write_1604_hex(HANDLE icdev, unsigned int offset, unsigned int lenth, unsigned char *writedata);
	short USER_API dc_checkpass_1604(HANDLE icdev, short area, unsigned char *password);
	short USER_API dc_checkpass_1604_hex(HANDLE icdev, short area, unsigned char *password);
	short USER_API dc_changepass_1604(HANDLE icdev, short area, unsigned char *password);
    short USER_API dc_changepass_1604_hex(HANDLE icdev, short area, unsigned char *password);
	short USER_API dc_readcount_1604(HANDLE icdev, short area);
	short USER_API dc_fuse_1604(HANDLE icdev);
	short USER_API dc_down_4428(HANDLE icdev);
	short USER_API dc_down_4442(HANDLE icdev);
	
	short USER_API dc_flash_card(HANDLE icdev);
	short USER_API dc_read_walletbalance(HANDLE icdev, unsigned char *walletvalue);
	short USER_API dc_consume_wallet(HANDLE icdev, unsigned char *walletvalue, unsigned char *secret);
	short USER_API dc_transfer_wallet(HANDLE icdev, unsigned char *walletvalue);
	short USER_API dc_authentication_key(HANDLE icdev, unsigned char *data, unsigned char *desdata);
	short USER_API dc_set_terminalnumber(HANDLE icdev, unsigned char lenth, unsigned char *serieldata);
	short USER_API dc_get_terminalnumber(HANDLE icdev, unsigned char lenth, unsigned char *serieldata);
	short USER_API dc_set_trademerchantcode(HANDLE icdev, unsigned char lenth, unsigned char *merchantcode);
	short USER_API dc_get_trademerchantcode(HANDLE icdev, unsigned char lenth, unsigned char *merchantcode);
	short USER_API dc_set_transactiontype(HANDLE icdev, unsigned char typecode);
	short USER_API dc_get_transactiontype(HANDLE icdev, unsigned char *typecode);
	short USER_API dc_set_tradesecretkey(HANDLE icdev, unsigned char *secretkey);
	short USER_API dc_get_tradesecretkey(HANDLE icdev, unsigned char *secretkey);
	short USER_API dc_set_hardwareserialnumber(HANDLE icdev, unsigned char lenth, unsigned char *hardwareserial);
	short USER_API dc_get_hardwareserialnumber(HANDLE icdev, unsigned char lenth, unsigned char *hardwareserial);
	short USER_API dc_reset_factory(HANDLE icdev);
	short USER_API dc_get_signmessageparameters(HANDLE icdev, unsigned char lenth, unsigned char *parameters);
	short USER_API dc_get_record(HANDLE icdev, unsigned char tablenumber, unsigned char recordnumber, unsigned char *recordquantity, unsigned char *recorddata);
	
	short USER_API dc_startreadmag(HANDLE icdev);
	short USER_API dc_stopreadmag(HANDLE icdev);
	short USER_API dc_readmag(HANDLE icdev, unsigned char *pTrack1Data, unsigned long *pTrack1Len, unsigned char *pTrack2Data, unsigned long *pTrack2Len, unsigned char *pTrack3Data, unsigned long *pTrack3Len);
	short USER_API dc_readmagcardallA(HANDLE icdev, unsigned char ctime, unsigned char *pTrack1Data, unsigned long *pTrack1Len, unsigned char *pTrack2Data, unsigned long *pTrack2Len, unsigned char *pTrack3Data, unsigned long *pTrack3Len);

	short USER_API dc_InstallKbKey(HANDLE icdev, unsigned char flag, unsigned char keylen, unsigned char *keydata, unsigned char mode);
	short USER_API dc_SetKbKeyID(HANDLE icdev, unsigned char keyID);
	short USER_API dc_GetEnPass(HANDLE icdev, unsigned char ctime, unsigned char panlen, unsigned char *pandata, unsigned char *rlen, unsigned char *cpass);
	short USER_API dc_get55data(HANDLE icdev, unsigned int slen, unsigned char *sdata, unsigned char *PacketType, unsigned int *rlen, unsigned char *rdata);
	short USER_API dc_CardIssuingScript(HANDLE icdev, unsigned int slen, unsigned char *sdata, unsigned char *TransactionIsInterrupted, unsigned char *TradingResult);
	short USER_API dc_SetEMVPara(HANDLE icdev, unsigned int slen, unsigned char *sdata);
	short USER_API dc_CalculateMACCheck(HANDLE icdev, unsigned char keyindex, unsigned char macmode, unsigned int datalen, unsigned char *srcdata, unsigned char *macdata);
	short USER_API dc_CalculateDes(HANDLE icdev, unsigned char keyindex, unsigned char enmode, unsigned short datalen, unsigned char *srcdata, unsigned char *desdata);
	short USER_API dc_CreatDesData(HANDLE icdev, unsigned char keytype, unsigned char enmode, unsigned char *sourcedata, unsigned char *retdata);

	short USER_API dc_writeSD(HANDLE icdev, int offset, int lenth, unsigned char *writebuffer);
	short USER_API dc_readSD(HANDLE icdev, int offset, int lenth, unsigned char *readbuffer);

	short USER_API dc_SetUsbMode(HANDLE icdev,unsigned char ucmode);

	short USER_API dc_id_status(HANDLE icdev);
	short USER_API dc_read_id_information(HANDLE icdev,unsigned char Type,unsigned int *length,unsigned char *outdata);
	short USER_API dc_find_i_d(HANDLE icdev);
	HANDLE USER_API dc_start_i_d(HANDLE icdev);
	char* USER_API dc_i_d_query_name(HANDLE idhandle);
	short USER_API dc_i_d_query_name_2(HANDLE idhandle, char *name);
	char* USER_API dc_i_d_query_sex(HANDLE idhandle);
	short USER_API dc_i_d_query_sex_2(HANDLE idhandle, char *sex);
	char* USER_API dc_i_d_query_nation(HANDLE idhandle);
	short USER_API dc_i_d_query_nation_2(HANDLE idhandle, char *nation);
	char* USER_API dc_i_d_query_birth(HANDLE idhandle);
	short USER_API dc_i_d_query_birth_2(HANDLE idhandle, char *birth);
	char* USER_API dc_i_d_query_address(HANDLE idhandle);
	short USER_API dc_i_d_query_address_2(HANDLE idhandle, char *address);
	char* USER_API dc_i_d_query_id_number(HANDLE idhandle);
	short USER_API dc_i_d_query_id_number_2(HANDLE idhandle, char *id_number);
	char* USER_API dc_i_d_query_department(HANDLE idhandle);
	short USER_API dc_i_d_query_department_2(HANDLE idhandle, char *department);
	char* USER_API dc_i_d_query_expire_day(HANDLE idhandle);
	short USER_API dc_i_d_query_expire_day_2(HANDLE idhandle, char *expire_day);
	unsigned char* USER_API dc_i_d_query_photo(HANDLE idhandle);
	short USER_API dc_i_d_query_photo_2(HANDLE idhandle, unsigned char *photo);
	unsigned long  USER_API dc_i_d_query_photo_len(HANDLE idhandle);
	short USER_API dc_i_d_query_photo_file(HANDLE idhandle, const char *FileName);
	short USER_API dc_i_d_query_photo_bmp_buffer(HANDLE idhandle, unsigned char *BmpBuffer, unsigned long *BmpLength);
	void  USER_API dc_end_i_d(HANDLE idhandle);

	short USER_API SD_IFD_PlayVoice(HANDLE icdev, unsigned char _playmode);
	short USER_API SD_IFD_GetPIN(HANDLE icdev, char *szPasswd);
	short USER_API SD_IFD_GetEnPIN(HANDLE icdev, char *szPasswd);
	short USER_API SD_IFD_GetPINPro(HANDLE icdev, char *szPasswd, unsigned char yyflag, unsigned char timeout);
	short USER_API SD_IFD_GetEnPINPro(HANDLE icdev, char *szPasswd, unsigned char yyflag, unsigned char modeflag, unsigned char timeout);
	short USER_API SD_IFD_GetEnPINBlock(HANDLE icdev, char *szPasswd, unsigned char yyflag, unsigned char modeflag, unsigned char *cardno, unsigned char timeout);
	short USER_API SD_IFD_Init(HANDLE icdev);
	short USER_API SD_IFD_SetMainKey(HANDLE icdev, unsigned char keyset, unsigned char *oldkey, unsigned char *newkey);
	short USER_API SD_IFD_SetWorkKey(HANDLE icdev, unsigned char keysetmain, unsigned char keysetwork, unsigned char *enkeywork);
	short USER_API SD_IFD_ActWorkKey(HANDLE icdev, unsigned char keysetmain, unsigned char keysetwork);
	short USER_API SD_IFD_SetKeyLength(HANDLE icdev, unsigned char keylength);
	short USER_API SD_IFD_SelecetDes(HANDLE icdev, unsigned char desmode);
	short USER_API SD_IFD_LEDDisplay(HANDLE icdev, unsigned char line, unsigned char row, unsigned char *leddata, unsigned char timeout);
	short USER_API SD_IFD_DES(HANDLE icdev, unsigned char mode, unsigned char *srcdata, unsigned char *desdata);

#ifdef __cplusplus
}
#endif

#endif // DCRF32_H_